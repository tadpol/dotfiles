# My ZSHRC
#

{{ if eq .chezmoi.os "darwin" -}}
# static or via `/opt/homebrew/bin/brew shellenv` ?
export HOMEBREW_PREFIX="/opt/homebrew";
export HOMEBREW_CELLAR="/opt/homebrew/Cellar";
export HOMEBREW_REPOSITORY="/opt/homebrew";
export PATH="/opt/homebrew/bin:/opt/homebrew/sbin${PATH+:$PATH}";
export MANPATH="/opt/homebrew/share/man${MANPATH+:$MANPATH}:";
export INFOPATH="/opt/homebrew/share/info:${INFOPATH:-}";

[ -d "${HOMEBREW_PREFIX}/share/zsh/site-functions" ] && fpath=(${HOMEBREW_PREFIX}/share/zsh/site-functions $fpath)
{{- end }}

# Path to your oh-my-zsh installation.
export ZSH=$HOME/.oh-my-zsh
ZSH_CUSTOM=~/.config/zsh
ZSH_THEME="tadpol"

zstyle ':omz:update' mode reminder  # just remind me to update when it's time
# zstyle ':omz:update' frequency 13 # days

DISABLE_LS_COLORS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

plugins=(
    asdf
    docker
    docker-compose
    nerdctl-compose
    screen
    urltools
)
{{ if eq .chezmoi.os "darwin" -}}
plugins+=(
    brew
    dash
    lima-vm
)
{{ end -}}


source $ZSH/oh-my-zsh.sh

# ewww.
unfunction take
unfunction takeurl
unfunction takegit
unfunction takedir


zstyle ':completion:*' completer _expand _complete _approximate
#zstyle ':completion:*' completions 1
#zstyle ':completion:*' glob 1
zstyle ':completion:*' max-errors 100
#zstyle ':completion:*' substitute 1
zstyle ':completion:*' verbose yes
zstyle ':completion:*' menu select=2

zstyle ':completion:*:descriptions' format '%B%d%b'
zstyle ':completion:*:messages' format '%d'
zstyle ':completion:*:warnings' format 'No matches for: %d'

zstyle :compinstall filename '~/.zshrc'

autoload -Uz compinit
compinit -i

# zmv is awesome.
autoload -U zmv
alias zmv='noglob zmv'
alias zcp='noglob zmv -C'
alias zln='noglob zmv -L'
alias zsy='noglob zmv -Ls'

setopt hist_ignore_space
unsetopt share_history

# I prefer my cursor to be at the end of the line, not the beginning
bindkey -M viins "^[OA" up-line-or-history
bindkey -M viins "^[[A" up-line-or-history
bindkey -M viins "^[OB" down-line-or-history
bindkey -M viins "^[[B" down-line-or-history
bindkey -v
#
bindkey '^R'   history-incremental-pattern-search-backward
bindkey '^S'   history-incremental-pattern-search-forward

autoload history-search-end
zle -N history-beginning-search-backward-end history-search-end
zle -N history-beginning-search-forward-end history-search-end
bindkey '^P' history-beginning-search-backward-end
bindkey '^N' history-beginning-search-forward-end

#alias ls='ls'
alias l='ls -bF'
alias ll='ls -blhF'
alias la='ls -abF'
alias lla='ls -ablhF'
alias pu=pushd
alias po=popd
alias d='dirs -v'
setopt -o PUSHD_SILENT
setopt -o PUSHD_IGNORE_DUPS

{{ if eq .chezmoi.os "linux" -}}
alias open=xdg-open
{{ end -}}
{{ if eq .chezmoi.os "darwin" -}}
dan() { dash "manpages%3A$@" }
{{ end -}}
alias cz=chezmoi

alias gst='git status'
alias gol='git log --pretty=format:"%C(auto)%h %G? %d %s" --graph'
alias gb='git branch'
alias gba='git branch -av'
alias gr='git remote -v'
#alias grg='open ${${$(git remote get-url origin)/#git@github.com:/https://github.com/}%.git}'
alias grg='gh browse'
alias gfp='git fetch --all -p'
alias gpd='git pull'
alias gpu='git push'
alias gpo='git push --set-upstream origin ${$(git symbolic-ref HEAD)#refs/heads/}'
alias isodate='date +%Y-%m-%dT%H:%M:%S%z'

export EDITOR=vim
export LESS='-F -R'

{{ if eq .chezmoi.os "darwin" -}}
export HOMEBREW_CASK_OPTS="--appdir=/Applications"
{{ end -}}

# Tool building options
# Is there a way to have these not here, but in the asdf configuration?
export KERL_CONFIGURE_OPTIONS=--without-javac
#export RUBY_CONFIGURE_OPTS="--with-openssl-dir=$(brew --prefix openssl@3)"

##### Paths; lots of stuff gets dropped in private places.

# Add luarocks paths. (LUA_PATH)
which luarocks >/dev/null && eval `luarocks path`

# Go paths
[ -f "$HOME/.asdf/plugins/golang/set-env.zsh" ] && source $HOME/.asdf/plugins/golang/set-env.zsh

# Add places to path, only if they exist.
[ -d "$HOME/.local/bin" ] && path=($HOME/.local/bin $path) # pipx
[ -d "$HOME/.cargo/bin" ] && path=($HOME/.cargo/bin $path)
path=($HOME/bin $path)

{{ if eq .chezmoi.hostname "hopper" -}}
export SSHTO=sshto
path=(/hopper/bin $path)
{{ end -}}

# cleanup potential path dups
typeset -U path

#  vim: set et sw=4 ts=4 :
